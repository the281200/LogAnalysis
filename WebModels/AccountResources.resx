<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddressName" xml:space="preserve">
    <value>AddressName</value>
  </data>
  <data name="Avatar" xml:space="preserve">
    <value>Avatar</value>
  </data>
  <data name="CarOwerName" xml:space="preserve">
    <value>Tên lái xe</value>
  </data>
  <data name="CarPartnerName" xml:space="preserve">
    <value>CarPartnerName</value>
  </data>
  <data name="ChangePrice" xml:space="preserve">
    <value>ChangePrice</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="DestinationPartner" xml:space="preserve">
    <value>DestinationPartner</value>
  </data>
  <data name="Distance" xml:space="preserve">
    <value>Distance</value>
  </data>
  <data name="DistrictName" xml:space="preserve">
    <value>DistrictName</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailNotValid" xml:space="preserve">
    <value>The email is not a valid email address</value>
  </data>
  <data name="EndLocation" xml:space="preserve">
    <value>EndLocation</value>
  </data>
  <data name="ErrorEmployeeJoinVehicle" xml:space="preserve">
    <value>Not exist employee map vehicle</value>
  </data>
  <data name="ErrorVeicleJoinEmployee" xml:space="preserve">
    <value>Not exist vehicle map employee</value>
  </data>
  <data name="ExportExcel" xml:space="preserve">
    <value>Do you want export exel file?</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot password</value>
  </data>
  <data name="FulllName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="LocationName" xml:space="preserve">
    <value>LocationName</value>
  </data>
  <data name="LocationNameExists" xml:space="preserve">
    <value>LocationName Is Exists</value>
  </data>
  <data name="LoginIncorrect" xml:space="preserve">
    <value>The user name or password provided is incorrect</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Điện thoại</value>
  </data>
  <data name="MobileNotValid" xml:space="preserve">
    <value>Mobile Not Valid</value>
  </data>
  <data name="NotAdd" xml:space="preserve">
    <value>Can't add item, please check again!</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="NotEdit" xml:space="preserve">
    <value>Can't edit, please check!</value>
  </data>
  <data name="NumberPlate" xml:space="preserve">
    <value>BKS</value>
  </data>
  <data name="NumberPlateExists" xml:space="preserve">
    <value>Number plate already exists</value>
  </data>
  <data name="PartnerName" xml:space="preserve">
    <value>Tên đối tác</value>
  </data>
  <data name="PartnerNameExists" xml:space="preserve">
    <value>The partnername is  valid</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordLength" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
  </data>
  <data name="PasswordNotMatch" xml:space="preserve">
    <value>The password and confirmation password do not match</value>
  </data>
  <data name="PlanIsExist" xml:space="preserve">
    <value>Plan is exist</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="PriceIsExists" xml:space="preserve">
    <value>Price is exists</value>
  </data>
  <data name="PriceIsNotSaved" xml:space="preserve">
    <value>Price is not saved</value>
  </data>
  <data name="ProvinceName" xml:space="preserve">
    <value>ProvinceName</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="RequiredAddressName" xml:space="preserve">
    <value>Requirement enter  the AddressName</value>
  </data>
  <data name="RequiredCarOwerName" xml:space="preserve">
    <value>Requirement enter  the CarOwerName</value>
  </data>
  <data name="RequiredCarPartnerName" xml:space="preserve">
    <value>Requirement enter  the CarPartnerName</value>
  </data>
  <data name="RequiredCategory" xml:space="preserve">
    <value>Required Category</value>
  </data>
  <data name="RequiredConfirmPassword" xml:space="preserve">
    <value>Requirement enter the Confirm Password</value>
  </data>
  <data name="RequiredDate" xml:space="preserve">
    <value>Required Date</value>
  </data>
  <data name="RequiredDestinationPartner" xml:space="preserve">
    <value>Requirement enter the Destination Partner</value>
  </data>
  <data name="RequiredDriver" xml:space="preserve">
    <value>Required Driver</value>
  </data>
  <data name="RequiredEndDate" xml:space="preserve">
    <value>Required End Date</value>
  </data>
  <data name="RequiredEndLocation" xml:space="preserve">
    <value>Requirement enter  the EndLocation</value>
  </data>
  <data name="RequiredEndTime" xml:space="preserve">
    <value>Requiredv End Time</value>
  </data>
  <data name="RequiredFulllName" xml:space="preserve">
    <value>RequiredFulllName</value>
  </data>
  <data name="RequiredKm" xml:space="preserve">
    <value>Required Km</value>
  </data>
  <data name="RequiredLocationName" xml:space="preserve">
    <value>Requirement enter  the LocationName</value>
  </data>
  <data name="RequiredMobile" xml:space="preserve">
    <value>Requirement enter  the Mobile</value>
  </data>
  <data name="RequiredNumberPlate" xml:space="preserve">
    <value>Requirement enter  the NumberPlate</value>
  </data>
  <data name="RequiredOilLevel" xml:space="preserve">
    <value>Required Oil Level</value>
  </data>
  <data name="RequiredOilPrice" xml:space="preserve">
    <value>Required Oil Price</value>
  </data>
  <data name="RequiredParkingPrice" xml:space="preserve">
    <value>Required Parking Price</value>
  </data>
  <data name="RequiredPartnerName" xml:space="preserve">
    <value>Requirement enter  the PartnerName</value>
  </data>
  <data name="RequiredPassword" xml:space="preserve">
    <value>Requirement enter the Password</value>
  </data>
  <data name="RequiredPayContent" xml:space="preserve">
    <value>Required Pay Content</value>
  </data>
  <data name="RequiredPayDate" xml:space="preserve">
    <value>Required Pay Date</value>
  </data>
  <data name="RequiredPayPrice" xml:space="preserve">
    <value>Required Pay Price</value>
  </data>
  <data name="RequiredPlanDate" xml:space="preserve">
    <value>Please choose date</value>
  </data>
  <data name="RequiredPrice" xml:space="preserve">
    <value>Required Price</value>
  </data>
  <data name="RequiredPriceCode" xml:space="preserve">
    <value>Requirement enter the Price Code</value>
  </data>
  <data name="RequiredRepairCategory" xml:space="preserve">
    <value>Required Repair Category </value>
  </data>
  <data name="RequiredRepairContent" xml:space="preserve">
    <value>Required Repair Content</value>
  </data>
  <data name="RequiredRepairDate" xml:space="preserve">
    <value>Required Repair Date</value>
  </data>
  <data name="RequiredRepairPrice" xml:space="preserve">
    <value>Required Repair Price</value>
  </data>
  <data name="RequiredRoleName" xml:space="preserve">
    <value>Requirement enter the Role Name</value>
  </data>
  <data name="RequiredRouteCode" xml:space="preserve">
    <value>Requirement enter  the RouteCode</value>
  </data>
  <data name="RequiredSourcePartner" xml:space="preserve">
    <value>Requirement enter the Source Partner</value>
  </data>
  <data name="RequiredStartDate" xml:space="preserve">
    <value>Required Start Date</value>
  </data>
  <data name="RequiredStartLocation" xml:space="preserve">
    <value>Requirement enter  the StartLocation</value>
  </data>
  <data name="RequiredStartTime" xml:space="preserve">
    <value>Required Start Time</value>
  </data>
  <data name="RequiredSuppliedOil" xml:space="preserve">
    <value>Required Supplied Oil</value>
  </data>
  <data name="RequiredTripCount" xml:space="preserve">
    <value>Please enter trip count</value>
  </data>
  <data name="RequiredUnitPrice" xml:space="preserve">
    <value>RequiredUnitPrice</value>
  </data>
  <data name="RequiredUserName" xml:space="preserve">
    <value>Requirement enter the Username</value>
  </data>
  <data name="RequiredVehicle" xml:space="preserve">
    <value>Please choose vehicle</value>
  </data>
  <data name="RequiredWeight" xml:space="preserve">
    <value>Requirement enter the Weight</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="RoleDescription" xml:space="preserve">
    <value>Role Description</value>
  </data>
  <data name="RoleExists" xml:space="preserve">
    <value>Role already exists</value>
  </data>
  <data name="RoleId" xml:space="preserve">
    <value>Role ID</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value>Role Name</value>
  </data>
  <data name="RouteCode" xml:space="preserve">
    <value>RouteCode</value>
  </data>
  <data name="RouteCodeExists" xml:space="preserve">
    <value>RouteCode Is Exists</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SignInMe" xml:space="preserve">
    <value>sign in me</value>
  </data>
  <data name="SourcePartner" xml:space="preserve">
    <value>SourcePartner</value>
  </data>
  <data name="StartLocation" xml:space="preserve">
    <value>StartLocation</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="UserId" xml:space="preserve">
    <value>User ID</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="UserNameExists" xml:space="preserve">
    <value>User Name already exists</value>
  </data>
  <data name="UserNameNotValid" xml:space="preserve">
    <value>The username is not valid</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Tải trọng</value>
  </data>
  <data name="WeightName" xml:space="preserve">
    <value>WeightName</value>
  </data>
</root>