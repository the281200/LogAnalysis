@{
    ViewBag.Title = "Danh mục trái phiếu/Tài sản";
    WebContext db = new WebContext();
    var roles = Roles.GetRolesForUser();
    var userRoleIds = db.WebRoles.Where(x => roles.Contains(x.RoleName)).Select(y => y.RoleId);
    var roleWebModule = db.AccessWebModuleRoles.AsNoTracking().FirstOrDefault(x => userRoleIds.Contains(x.RoleId) && x.WebModule.URL == "/admin/TypeOfAssets");


}
<script type="text/javascript">
    var rowselected = [];
    var isCheckedAll = false;

    function binding_handler(e) {
    }

   @* function changepassword_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        opendlg("/admin/Customer/changepassword/?userName=" + dataItem.UserName);
    }*@

    function delete_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        opendlg("/admin/AssetCategory/delete/" + dataItem.Id);
    }

    function edit_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        opendlg("/admin/AssetCategory/edit/" + dataItem.Id);
    }

    function modules_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        opendlg("/admin/AssetCategory/ModulesMapping/" + dataItem.Id);

    }

    function sites_handler(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        opendlg("/admin/AssetCategory/AdminSitesMapping/" + dataItem.Id);
    }

    $(document).ready(function () {
        $("#btnadd").click(function () {
            opendlg("/admin/AssetCategory/add");
        });

        $("#btnedit").click(function () {
            var selected = [];
            $('input:checkbox[name=checkedNodes]').each(function () {
                if ($(this).is(':checked')) {s
                    selected.push($(this).val());
                }
            });
            if (rowselected.length > 0) {
                opendlg("/admin/AssetCategory/edit/" + selected[0]);
            } else {
                alert("Không có khoản mục nào được chọn.");
            }
        });

        $("#btnundo").click(function () {
            opendlg("/admin/AssetCategory/Undo");
        });

        $("#btndelete").click(function () {
            $('#warning_contract').modal('show');
        });

        $("#accept_delete").click(function () {
           

           var dataSource = $("#grid").data("kendoGrid").dataSource.data();
            var models = [];
            if (rowselected.length > 0) {
                for (var i = 0; i < rowselected.length; i++) {
                    for (var j = 0; j < dataSource.length; j++) {
                        var dataItem = dataSource[j];
                        if (dataItem.Id == rowselected[i]) {
                            models.push(dataItem.Id);
                        }
                    }
                }
                
                var dataSubmit = JSON.stringify(models);

                $.post('@Url.Action("Deletes", "AssetCategory")', { data: dataSubmit}, function (data) {
                    if (data.success) {
                        $("#grid").data("kendoGrid").dataSource.read();
                        show_stack_bottom_right('success', 'Xóa danh mục trái phiếu/tài sản', 'Xóa thành công.');
                    }
                    else {
                        @*show_stack_bottom_right('error', 'Xóa loại hình tài sản', 'Xóa thất bại.');*@
                        alert("Xóa không thành công. Vui lòng thử lại!");
                    }
                });
            }
            else {
                alert("Vui lòng chọn để xóa danh mục trái phiếu/tài sản!");
            }
        });
    });

    function onDataBound(e) {
        $('#grid .k-grid-content').height(screen.height * 0.5);

        $('input[name="checkedNodes"]').each(function () {
            if (rowselected.indexOf(this.value) != -1) {
                $(this).attr('checked', 'checked');
            } else {
                $(this).removeAttr('checked');
            }
        });
    };
</script>

@if (roleWebModule != null && roleWebModule.View.HasValue && roleWebModule.View.Value)
{
<div id="main" class="mt-2">
    <p class="d-block text-center-header title-table">DANH MỤC TRÁI PHIẾU/TÀI SẢN</p>

    <div class="container-fluid">
        <div class="page-header">
            @*<div class="pull-left">
                <div class="breadcrumbs"></div>
            </div>*@
            <div class="flex float-right-custom">
                <ul class="actions">
                    @if (roleWebModule != null && roleWebModule.Add.HasValue && roleWebModule.Add.Value)
                    {
                        <li>
                            <a href="#" id="btnadd" class="btn btn-mini  btn-blue btn-inverse"> @Resources.Common.Add</a>
                        </li>
                    }
                    @if (roleWebModule != null && roleWebModule.Edit.HasValue && roleWebModule.Edit.Value)
                    {
                        <li>
                            <a href="#" id="btnedit" class="btn btn-mini   btn-blue btn-inverse"> @Resources.Common.Edit</a>
                        </li>
                    }
                    @if (roleWebModule != null && roleWebModule.Delete.HasValue && roleWebModule.Delete.Value)
                    {
                        <li>
                            <a href="#" id="btndelete" class="btn btn-mini  btn-red btn-inverse">@Resources.Common.Delete</a>
                        </li>
                        <li>
                            <a href="#" id="btnundo" class="btn btn-mini  btn-red btn-inverse">Hoàn tác</a>
                        </li>
                    }
                </ul>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span12">
                <div class="box">
                    <div class="box-content nopadding">
                        @(Html.Kendo().Grid<AssetCategory>()
                                .Name("grid")
                                .Columns(columns =>
                                {
                                    columns.Command(command =>
                                    {
                                        if (roleWebModule != null && roleWebModule.Edit.HasValue && roleWebModule.Edit.Value)
                                        {
                                            command.Custom(Resources.Common.Edit).Click("edit_handler").HtmlAttributes(new { title = "Sửa" }); 
                                        }
                                       
                                    }).Width(75).HtmlAttributes(new { style = "text-align:center;" }).HeaderTemplate("<image src='/Content/themes/admin/img/menu-edit.png'>");
                                    columns.Bound("").ClientTemplate("<input name='checkedNodes' type='checkbox' class='k-checkbox' value='#=Id#' onclick='childNodeClick(this)'/>")
                                    .Filterable(false)
                                   .HeaderTemplate("<input type='checkbox' class='checked_all' onclick='checkAll(event)' id='chkAll'/>").Width(70)
                                    .HtmlAttributes(new { style = "text-align:center;" });
                                    columns.Bound(p => p.Id).Title(Resources.Common.ID).HtmlAttributes(new { style = "text-align:center;" }).Hidden();
                                    columns.Bound(p => p.AssetCode).Title("Mã trái phiếu").Width(150).HtmlAttributes(new { style = "text-align:center;" });
                                    columns.Bound(p => p.Name).Title("Tên trái phiếu").Width(200);
                                    columns.Bound(p => p.Price).Title("Mệnh giá").Format("{0:N0}").Width(150).HtmlAttributes(new { style = "text-align:right;" });
                                    columns.Bound(p => p.ReleaseDate).Title("Ngày phát hành").Format("{0:dd-MM-yyyy}").Width(150).HtmlAttributes(new { style = "text-align:center;" });
                                    columns.Bound(p => p.TradeOrganization).Title("Tổ chức giao dịch").Width(200);
                                    columns.Bound(p => p.PropertySecurity).Title("Hình thức bảo đảm tài sản").Width(250);
                                    columns.Bound(p => p.ConsulAndPublishOrg).Title("Tổ chức tư vấn và phát hành").Width(250);
                                    columns.Bound(p => p.DepositoryAgent).Title("Đại lý lưu ký").Width(250);
                                    columns.Bound(p => p.PaymentAgent).Title("Đại lý thanh toán").Width(250);
                                    columns.Bound(p => p.InterestPayment).Title("Kỳ trả lãi").Width(150).HtmlAttributes(new { style = "text-align:center;" });
                                    columns.Bound(p => p.Period).Title("Kỳ hạn(tháng)").Width(150).Format("{0:0.0}").HtmlAttributes(new { style = "text-align:center;" });
                                    columns.Bound(p => p.InterestRate).Title("Lãi suất").Width(150).Format("{0:0.00} %").HtmlAttributes(new { style = "text-align:center;" });
                                    columns.Bound(p => p.Note).Title("Ghi chú").Width(200);
                                })
                                .Scrollable()
                                .Pageable()
                                .Sortable()
                                .Filterable()
                                .Reorderable(reorder => reorder.Columns(true))
                                .Selectable(select => select.Mode(GridSelectionMode.Single))
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Model(model => model.Id(p => p.Id))
                                    .PageSize(20)
                                    .Read(read => read.Action("AssetCategorys_Read", "AssetCategory"))
                                    .ServerOperation(false)
                                 )
                                 .Events(events => events.DataBinding("binding_handler").DataBound("onDataBound"))
                        )
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
}
<script>
    function getDataFilter() {
        var dataSource = $("#grid").data("kendoGrid").dataSource;
        var filters = dataSource.filter();
        var allData = dataSource.data();
        var query = new kendo.data.Query(allData);
        var result = query.filter(filters).data;
        return result;
    }
    function getCheckAll() {
        var dataFilterID = [];
        var dataFilter = getDataFilter();
        var check;
        for (var i = 0; i < dataFilter.length; i++) {
            dataFilterID.push(String(dataFilter[i].Id));
        }
        for (var i = 0; i < dataFilterID.length; i++) {
            var index = rowselected.indexOf(dataFilterID[i]);
            if (index != -1) {
                check = true;
            }
            else {
                check = false;
                break;
            }
        }
        return check;
    }

    function childNodeClick(element) {
        var dataID = getCheckAll();
        var id = element.value;
        if (rowselected.indexOf(id) !== -1) {
            rowselected.splice(rowselected.indexOf(id), 1);
        } else {
            rowselected.push(id);
        }
        isCheckedAll = getCheckAll();
        $('#chkAll').prop('checked', isCheckedAll);
    }

    $(function () {
        $(".k-filter").click(function () {
            setTimeout(function () {
                $(".k-filter-menu .k-button").click(function () {
                    setTimeout(function () {
                        rowselected = [];
                        isCheckedAll = getCheckAll();
                        $('#chkAll').prop('checked', isCheckedAll);
                        $('input[name="checkedNodes"]').each(function () {
                            if (rowselected.indexOf(this.value) != -1) {
                                $(this).attr('checked', 'checked');
                            } else {
                                $(this).removeAttr('checked');
                            }
                        });
                    }, 10)
                })
            }, 100);
        });
    });

    function checkAll(e) {

        var rowItems = getDataFilter();
        isCheckedAll = $(e.target).prop('checked');
        if (isCheckedAll) {
            for (var i = 0; i < rowItems.length; i++) {
                var index = rowselected.indexOf(String(rowItems[i].Id));
                if (index == -1) {
                    rowselected.push(String(rowItems[i].Id));
                }
            }
        }
        else if (!isCheckedAll) {
            var dataFilterID = [];
            var dataFilter = getDataFilter();
            for (var i = 0; i < dataFilter.length; i++) {
                dataFilterID.push(String(dataFilter[i].Id));
            }
            for (var i = 0; i < dataFilterID.length; i++) {
                var index = rowselected.indexOf(dataFilterID[i]);
                if (index != -1) {
                    rowselected.splice(index, 1);
                }
            }
        }

        $('input[name="checkedNodes"]').each(function () {
            $(this).prop('checked', isCheckedAll);
        });
    }
</script>
<div class="modal" tabindex="-1" role="dialog" id="warning_contract">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cảnh báo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Các hợp đồng liên quan sẽ bị xóa!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="accept_delete">Chấp nhận</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="cancel">Hủy bỏ</button>
            </div>
        </div>
    </div>
</div>
