@model WEB.Models.AssetCategoryViewModel
@{

    Layout = "~/Areas/Admin/Views/Shared/_LayoutEmpty.cshtml";
}
@using (Html.BeginForm("Edit", "AssetCategory", new { Id = Model.Id }, FormMethod.Post, new { @id = "debt", enctype = "multipart/form-data", @class = "form-change-car" }))
{
<div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Mã trái phiếu", new { @class = "control-label margin-text-role" })
            <span class="form-obligatory">*</span>
        </div>
        <div>
            @Html.TextBoxFor(m => m.AssetCode, new { type = "text", name = "Tên nhóm", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.AssetCode)
        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Tên trái phiếu", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.Name, new { type = "text", name = "Title", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.Name)
        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Mệnh giá", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.StringPrice, new { type = "text", name = "StringPrice", @class = "input-block-level", @onkeypress = "return CheckNumeric()", @onkeyup = "FormatCurrency(this)" })
            @Html.HiddenFor(m => m.Price)
            @Html.ValidationMessageFor(m => m.StringPrice)
            @Html.ValidationMessageFor(m => m.Price)

        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Ngày phát hành", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @(Html.Kendo().DatePicker()
                    .Name("release") // The name of the DatePicker is mandatory. It specifies the "id" attribute of the widget.
                    .Min(new DateTime(1900, 1, 1)) // Sets the min date of the DatePicker.
                    .Max(new DateTime(2099, 12, 31)) // Sets the max date of the DatePicker.
                    .HtmlAttributes(new { type = "text" })
                    .Culture("vi-VN")
                    .Value(Model.ReleaseDate)

    )
            @Html.ValidationMessageFor(m => m.ReleaseDate)

        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Tổ chức giao dịch", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.TradeOrganization, new { type = "text", name = "Title", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.TradeOrganization)
        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Hình thức đảm bảo tài sản", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.PropertySecurity, new { type = "text", name = "Title", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.PropertySecurity)
        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Tổ chức tư vấn và phát hành", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.ConsulAndPublishOrg, new { type = "text", name = "Title", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.ConsulAndPublishOrg)
        </div>
    </div>

    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Đại lý lưu ký", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.DepositoryAgent, new { type = "text", name = "Title", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.DepositoryAgent)
        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Đại lý thanh toán", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.PaymentAgent, new { type = "text", name = "Title", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.PaymentAgent)
        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Kỳ trả lãi/Số lần trả lãi", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.InterestPayment, new { type = "text", name = "Title", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.InterestPayment)
        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Kỳ hạn", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.PeriodFloat, new { type = "text", name = "Period", id = "Period", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.PeriodFloat)
        </div>
        <p class="unit" style="padding-left: 10px; padding-bottom: 30px;">tháng</p>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Lãi suất", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.InterestFloat, new { type = "text", name = "Interest", id = "Interest", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.InterestFloat)
            @Html.ValidationSummary(true)

        </div>
        <p class="unit" style="padding-left: 10px; padding-bottom: 30px;">%</p>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Ghi chú", new { @class = "control-label margin-text-role" })
        </div>
        <div>
            @Html.TextAreaFor(m => m.Note, new { type = "text", name = "Mô tả nhóm", @class = "input-area-level" })
            @Html.ValidationMessageFor(m => m.Note)
            @Html.ValidationSummary(true)
        </div>
    </div>
    @Html.HiddenFor(m => m.Id)
    <div class="validation-group"><div class="controls">@Html.ValidationSummary(true)</div></div>
    <div class="form-actions"><button class="btn btn-primary" type="submit"><i class="icon-save"></i>@Resources.Common.SaveChanges</button></div> @Html.AntiForgeryToken()
</div>
}
<script type="text/javascript">

    $(document).ready(function () { 
    //if (screen.width > 1500) {
    //    top.winsetup("Chỉnh sửa phân quyền", 1440 * 0.3, screen.height * 0.175, true);
    //}
    //    if (screen.width > 320) {
    //        top.winsetup("Chỉnh sửa phân quyền", 300, 180, true);s
    //    }
    //else {
    //    top.winsetup("Chỉnh sửa phân quyền", screen.width * 0.8, screen.height * 0.2, true);
    //}
        top.winsetup("Chỉnh sửa danh mục trái phiếu/tài sản", 700, 600, true);
        if (screen.width < 576) {
            top.winsetup("Chỉnh sửa danh mục trái phiếu/tài sản", screen.width * 0.9, screen.height * 0.2, true);
        }

        $("#debt").submit(function () {
            StringPrice = $("#StringPrice").val();
            $("input[name='Price']").val(StringPrice.replace(/,/g, ""));
            return true;
        });
    }); function edit_success() {
        top.winclose();
        top.$("#grid").data("kendoGrid").dataSource.read();
        window.parent.show_stack_bottom_right('success', 'Sửa danh mục trái phiếu/tài sản', 'Sửa thành công.');

    }
</script>