@model ReportViewModel
@{
    ViewBag.Title = "BÁO CÁO TỔNG HỢP TÌNH HÌNH NHÓM TÀI SẢN/LOẠI HỢP ĐỒNG";
    WebContext db = new WebContext();
    var roles = Roles.GetRolesForUser();
    var userRoleIds = db.WebRoles.Where(x => roles.Contains(x.RoleName)).Select(y => y.RoleId);
    var roleWebModule = db.AccessWebModuleRoles.AsNoTracking().FirstOrDefault(x => userRoleIds.Contains(x.RoleId) && x.WebModule.URL == "/admin/ReportTypeOfAssets");

    var totalWeigh = ViewBag.totalWeigh;
    var totalCostPrice = ViewBag.totalCostPrice;
}

<script>
    //datacombobox PRODUCT
    var comboboxProduct = {};
    var checkFirstBound = 0;
    function onDataBound() {
        if (checkFirstBound == 0) {
            comboboxProduct = $("#ComboboxCustomer").data("kendoComboBox").dataSource.data();
            checkFirstBound = 1;
        }
    }
</script>

<div id="general-import">
    @*<div class="container-fluid">
            <div class="page-header">
                <div class="pull-left">
                    <div class="breadcrumbs">
                        <h1>@ViewBag.title</h1>
                    </div>
                </div>
                <div class="pull-right">

                </div>
            </div>
        </div>*@
    @using (Html.BeginForm("ExportExcel", "ReportTypeOfAssets", FormMethod.Post, new { @id = "general", enctype = "multipart/form-data", @class = "form-horizontal fix" }))
    {
        @Html.HiddenFor(m => m.DataExport)
        @Html.HiddenFor(m => m.CustomerId)
        @Html.HiddenFor(m => m.StartTime)
        @Html.HiddenFor(m => m.EndTime)
        <div class="messageValidation">
            @Html.ValidationSummary()
        </div>
        <div class="row row-report">
            <div class="block-row">
                <div class="flex">

                    <div class="comboboxCustomer">
                        <p class="text-description-report">Khách hàng:</p>
                        @(Html.Kendo().ComboBoxFor(m => m.CustomerId)
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .Placeholder("Chọn khách hàng...")
                            .Suggest(true)
                            .Filter("contains")
                            .Name("CustomerId")
                            .HtmlAttributes(new { id = "ComboboxCustomer" })
                            .Events(ev => ev.DataBound("onDataBound"))
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("Get_Customers", "TLBsPromise");
                                })
                                .ServerFiltering(true);
                            })
            //.Events(e => e.DataBound("onDataBoundCombobox").Change("onChangeCombobox"))
            )
                    </div>
                </div>
                <div class="flex">
                    <div>
                        @*<p class="text-hide-custom">Xuất</p>*@
                        <span class="btn-download btn-plan-drive radius-button export" id="export">
                            <span class="text-14-500 padding-text-plan-drive report-export">Chạy báo cáo</span>
                        </span>
                    </div>
                    <div>
                        @*<p class="text-hide-custom">Tải</p>*@
                        <span class="btn-download btn-plan-drive radius-button" id="download">
                            <input type="submit" value="Tải file excel" class="text-14-500 padding-text-plan-drive report-download" />
                        </span>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="container-fluid" id="dealDetail">
        <div class="row-fluid">
            <div class="span12">
                <div class="box">
                    <div class="box-content nopadding">
                        <div class="report-title">
                            <h1 class="title-report">@ViewBag.title</h1>
                            <h2 id="customer-name" class="customer-des"></h2>
                            <h2 id="customer-phone" class="customer-des"></h2>
                            <h2 id="customer-email" class="customer-des"></h2>

                        </div>
                        <div id="detail-report"></div>
                        <script>
                            var rowselected;
                            var columns = [
                                { field: "STT", title: "Thứ tự", width: "100px", hidden: true },
                                { field: "STT", title: "Thứ tự", width: "100px", hidden: true },
                                { field: "STT", title: "Thứ tự", width: "100px", hidden: true },
                                { field: "STT", title: "Thứ tự", width: "100px", attributes: { "style": "text-align:center;" } },
                                {
                                    field: "AssetId",
                                    title: "Mã danh mục tài sản/loại hình",
                                    width: "250px",
                                    footerTemplate: "Tổng cộng"
                                },
                                { field: "AssetName", title: "Tên loại hình", width: "200px" },
                                
                                {
                                    field: "NumOfContract",
                                    title: "Số lượng hợp đồng",
                                    template: "#= (data.NumOfContract) ? kendo.format('{0:n0} ', parseFloat(data.NumOfContract)) : '' #",
                                    aggregates: ["sum"],
                                    footerTemplate: "#= (sum) ? kendo.format('{0:n0} ', parseFloat(sum)) : '' #",
                                    width: "200px",
                                    attributes: { "style": "text-align:right;" }
                                },
                                {
                                    field: "SumOfContract",
                                    title: "Giá trị mệnh giá (đ)",
                                    template: "#= (data.SumOfContract) ? kendo.format('{0:n0} ', parseFloat(data.SumOfContract)) : '' #",
                                    aggregates: ["sum"],
                                    footerTemplate: "#= (sum) ? kendo.format('{0:n0} đ', parseFloat(sum)) : '' #",
                                    width: "200px",
                                    attributes: { "style": "text-align:right;" }
                                },
                                {
                                    field: "RoundedPurchaseValue",
                                    title: "Giá trị hợp đồng làm tròn (đ)",
                                    template: "#= (data.RoundedPurchaseValue) ? kendo.format('{0:n0} ', parseFloat(data.RoundedPurchaseValue)) : '' #",
                                    aggregates: ["sum"],
                                    footerTemplate: "#= (sum) ? kendo.format('{0:n0} đ', parseFloat(sum)) : '' #",
                                    width: "250px",
                                    attributes: { "style": "text-align:right;" }
                                },
                                {
                                    field: "SumOfInterest",
                                    title: "Tổng lãi dự thu theo hợp đồng (đ)",
                                    template: "#= (data.SumOfInterest) ? kendo.format('{0:n0}', parseFloat(data.SumOfInterest)) : '' #",
                                    aggregates: ["sum"],
                                    footerTemplate: "#= (sum) ? kendo.format('{0:n0} đ', parseFloat(sum)) : '' #",
                                    width: "300px",
                                    attributes: { "style": "text-align:right;" }
                                },
                                {
                                    field: "RealIncome",
                                    title: "Trái tức/lợi tức/lãi thực thu trong kỳ (đ)",
                                    template: "#= (data.RealIncome) ? kendo.format('{0:n0}', parseFloat(data.RealIncome)) : '' #",
                                    aggregates: ["sum"],
                                    footerTemplate: "#= (sum) ? kendo.format('{0:n0} đ', parseFloat(sum)) : '' #",
                                    width: "300px",
                                    attributes: { "style": "text-align:right;" }
                                },
                                {
                                    field: "Sum",
                                    title: "Tổng cộng (đ)",
                                    template: "#= (data.Sum) ? kendo.format('{0:n0}', parseFloat(data.Sum)) : '' #",
                                    aggregates: ["sum"],
                                    footerTemplate: "#= (sum) ? kendo.format('{0:n0} đ', parseFloat(sum)) : '' #",
                                    width: "250px",
                                    attributes: { "style": "text-align:right;" }
                                },

                            ];

                            function loaddata(model) {
                                if ($("#detail-report").data("kendoGrid") != null) {
                                    $('#detail-report').html('');
                                    delete $("#detail-report").data("kendoGrid")
                                    $("#detail-report").data('kendoGrid').dataSource.data([]);;
                                }
                                $("#detail-report").kendoGrid({
                                    dataSource: {
                                        transport: {
                                            read: {
                                                url: "/admin/ReportTypeOfAssets/InvestmentReportRead/",
                                                dataType: "json",
                                                data: model,
                                            }
                                        },
                                        aggregate: [
                                            { field: "NumOfContract", aggregate: "sum" },
                                            { field: "SumOfContract", aggregate: "sum" },
                                            { field: "RoundedPurchaseValue", aggregate: "sum" },
                                            { field: "SumOfInterest", aggregate: "sum" },
                                            { field: "RealIncome", aggregate: "sum" },
                                            { field: "Sum", aggregate: "sum" },
                                           

                                        ],
                                        emptyMsg: 'This grid is empty',
                                        schema: {
                                            model: {
                                                ID: "ID",
                                                fields: {

                                                    STT: { type: "number" },
                                                    AssetId: { type: "string" },
                                                    AssetName: { type: "string" },
                                                    NumOfContract: { type: "number" },
                                                    SumOfContract: { type: "number" },
                                                    RoundedPurchaseValue: { type: "number" },
                                                    SumOfInterest: { type: "number" },
                                                    RealIncome: { type: "number" },
                                                    Sum: { type: "number" },

                                                }
                                            }
                                        },
                                    },
                                    scrollable: true,
                                    columns: columns,
                                    filterable: true,
                                    dataBinding: function () {
                                        rowselected = new Array();
                                    },
                                    change: function (e) {
                                        rowselected = [];
                                        var len = this.select().length;
                                        for (i = 0; i < len; i++) {
                                            rowselected.push(this.dataItem(this.select()[i]).ID);
                                        }
                                    }
                                });
                            }
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="d-flex justify-content-center">
    <div class="loader" style="display:none; margin-top: 30px;"></div>
</div>
<script>
    $(document).ready(function () {
        //datacombobox PRODUCT

        $("#export").click(function () {
            /* $(".loader").show();*/
            if ($("#detail-report").data("kendoGrid") != null) {
                $('#detail-report').html('');
                delete $("#detail-report").data("kendoGrid")
                $("#detail-report").data('kendoGrid').dataSource.data([]);;
            }

            var modelReport = {};

            modelReport.CustomerId = $("#ComboboxCustomer").val();

            if (modelReport.CustomerId != null  && modelReport.CustomerId != "") {

                $.ajax({
                    url: "@Url.Action("GetUserInfo", "ReportTypeOfAssets")",
                    contentType: "application/json",
                    method: "post",
                    data: JSON.stringify({ id: modelReport.CustomerId }),
                    success: function (data) {
                        if (data.success) {
                            $("#customer-name").text(data.name);
                            $("#customer-phone").text(data.phone);
                            $("#customer-email").text(data.email);
                        }
                        else {
                            $("#customer-name").text('');
                            $("#customer-phone").text('');
                            $("#customer-email").text('');
                        }
                    },
                    error: function (d) {
                        console.log(d.responseText);
                    }
                });


                loaddata(modelReport);
            }
            else {

                $("#customer-name").text('');
                $("#customer-phone").text('');
                $("#customer-email").text('');

                alert("Vui lòng chọn khách hàng!");
            }

        });

        $("#download").click(function (e) {
            e.preventDefault();

            if ($("#detail-report").data("kendoGrid") != null) {

                //Kiểm tra dữ liệu rồi tải xuống
                var dataSource = $("#detail-report").data("kendoGrid").dataSource.data();


                var models = [];
                for (var i = 0; i < dataSource.length; i++) {
                    var dataItem = dataSource[i];
                    var model = {};

                    model.AssetId = dataItem.AssetId;
                    model.AssetName = dataItem.AssetName;
                    model.NumOfContract = dataItem.NumOfContract;
                    model.SumOfContract = dataItem.SumOfContract;
                    model.RoundedPurchaseValue = dataItem.RoundedPurchaseValue;
                    model.SumOfInterest = dataItem.SumOfInterest;
                    model.RealIncome = dataItem.RealIncome;
                    model.Sum = dataItem.Sum;
                    models.push(model);
                }

                var dataString = JSON.stringify(models);
                var dataExport = dataString.replace('"', "?");
                $("input[name='DataExport']").val(dataExport);

                $("input[name='CustomerId']").val($("#ComboboxCustomer").val());
                setTimeout(function () {
                    $("#general").submit();
                }, 100);
            }
            else {
                alert("Vui lòng chạy báo cáo trước khi tải!!");
            }
        });
    });
</script>
