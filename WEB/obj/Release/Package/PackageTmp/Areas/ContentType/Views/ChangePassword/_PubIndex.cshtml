@model WebModels.LocalPasswordModel
@{
    var webmodule = (WebModule)ViewBag.WebModule;
    var moduletran = webmodule;
    //var background = String.IsNullOrEmpty(webmodule.Image) ? "/content/themes/web/img/bg-title1.png" : webmodule.Image;
    //var codecolor = String.IsNullOrEmpty(webmodule.CodeColor) ? "#b200b2" : webmodule.CodeColor;
    var urlcat = webmodule.URL;
    var username = WebSecurity.CurrentUserName;
    if (string.IsNullOrEmpty(webmodule.URL) || string.IsNullOrWhiteSpace(webmodule.URL))
    {
        urlcat = Url.Action("Index", "Home", new { metatitle = webmodule.MetaTitle != null ? webmodule.MetaTitle : "web", id = webmodule.ID, area = "" });
    }
    TempData["Title"] = Utility.UseStringHasValue(webmodule.SeoTitle, webmodule.Title);
    TempData["Description"] = Utility.UseStringHasValue(webmodule.MetaDescription, webmodule.Description);
    TempData["Keywords"] = Utility.UseStringHasValue(webmodule.MetaKeywords, webmodule.SeoTitle);
    TempData["URL"] = ApplicationService.Domain + urlcat;
    TempData["Cat"] = webmodule.Title;
    TempData["ID"] = webmodule.ID;

}
<div class="alert alert-primary left-icon-big" role="alert" id="alert" style="display: none;">
    Đổi mật khẩu thành công!
</div>
<div class="userprofile">
    @Html.Action("SiteMapUser", "Home", new { area = "", id = webmodule.ID })
    <div class="row">

        <div class="col-lg-12">
            <div class="card">

                <div class="card-body" style=" margin-top: 50px;">
                    <div class="form-validation">
                        @using (Ajax.BeginForm("ChangePasswordPost", "ChangePassword", new { area = "ContentType", userName = ViewBag.UserName },
                                new AjaxOptions
                                {
                                    OnSuccess = "OnChangeSuccess",
                                    OnFailure = "OnChangeFailure"
                                }, new { @class = "form-valide" }))
                        {

                            <script>
                                function OnChangeFailure() {
                                    alert("Đổi mật khẩu không thành công vui lòng thử lại!");
                                }
                                function OnChangeSuccess(data, status, xhr) {

                                    if (data.Success) {
                                        //$("#pass").text("");
                                        //$("#confirm").text("");
                                        $("#alert").css("display", "block");
                                        $("#alert").fadeTo(2000, 500).slideUp(500, function () {
                                            $("#alert").slideUp(500);
                                        });

                                    } else {
                                        if (data.Type == 'pass') {
                                            $("#pass").text(data.Error);
                                            $("#pass").attr("style", "display:block;");
                                        }

                                        if (data.Type == 'confirm') {
                                            $("#confirm").text(data.Error);
                                            $("#confirm").attr("style", "display:block;");
                                        }

                                    }
                                }
                            </script>


                            <div>
                                <div class="form-group row">
                                    <div class="col-lg-2">
                                        @Html.LabelFor(m => m.NewPassword, new { @for = "new", @class = "col-form-label" })

                                    </div>
                                    <div class="col-lg-8">
                                        @Html.PasswordFor(m => m.NewPassword, new { @name = "new", @class = "form-control input-rounded" })
                                        @Html.ValidationMessageFor(m => m.NewPassword)
                                        <p class="validate-input" id="pass"></p>

                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-lg-2">
                                        @Html.LabelFor(m => m.ConfirmPassword, new { @for = "confirm", @class = "col-form-label" })

                                    </div>
                                    <div class="col-lg-8">
                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @name = "confirm", @class = "form-control input-rounded" })
                                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                        <p class="validate-input" id="confirm"></p>

                                    </div>
                                </div>


                                <div class="validation-group">
                                    <div class="controls">
                                        @Html.ValidationSummary(true)
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-lg-2">

                                    </div>
                                    <div class="col-lg-8 ">
                                        <button type="submit" class="btn btn-primary">@Resources.Common.SaveChanges</button>
                                    </div>
                                </div>

                            </div>
                            @Html.AntiForgeryToken()
                        }

                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

