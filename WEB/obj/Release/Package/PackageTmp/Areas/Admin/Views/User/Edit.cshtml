@model WebModels.UserProfile
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutEmpty.cshtml";
}

@using (Html.BeginForm("Edit", "User", new { cUserName = ViewBag.cUserName, UserId = Model.UserId },
    FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-change-car" }))
{
<div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.UserName, new { type = "text", name = "Tên nhóm", @class = "input-block-level", @readonly = true })
            @Html.ValidationMessageFor(m => m.UserName)
            @Html.ValidationSummary(true)
        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Nhóm vai trò user", new { @class = "control-label" })
        </div>
        <div class="controls">
            <div class="">
                @(Html.Kendo().MultiSelect()
                  .Name("roles")
                  .DataTextField("RoleName")
                  .DataValueField("RoleName")
                  .Placeholder("...")
                  .DataSource(source => {
                      source.Read(read =>
                      {
                          read.Action("GetRoles", "Role");
                      })
                      .ServerFiltering(false);
                  })
            )
            </div>
        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.LabelFor(m => m.FullName, new { @class = "control-label" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.FullName, new { type = "text", name = "Tên nhóm", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.FullName)


        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.Email, new { type = "text", name = "Tên nhóm", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.Email)
        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.LabelFor(m => m.Mobile, new { @class = "control-label" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.Mobile, new { type = "text", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.Mobile)

        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Chức vụ", new { @class = "control-label" })
        </div>
        <div>
            @Html.TextBoxFor(m => m.Position, new { type = "text", @class = "input-block-level" })

        </div>
    </div>

    @*<div class="flex">
        <div class="width-text-modal">
            @Html.LabelFor(m => m.PartnerID, new { @class = "control-label" })
        </div>
        <div class="controls">

            @(Html.Kendo().ComboBox()
      .Name("PartnerID")
      .HtmlAttributes(new { style = "width:100%" })
      .Placeholder("Chọn đối tác...")
      .DataTextField("PartnerName")
      .DataValueField("ID")
      .DataSource(source =>
      {
          source.Read(read =>
          {
              read.Action("GetPartners", "ManagePartner");

          })
           .ServerFiltering(true);

      })
      )
            @Html.ValidationMessageFor(m => m.PartnerID)
        </div>
    </div>*@

    <div class="flex">
        <div class="width-text-modal">
            @Html.LabelFor(m => m.Avatar, new { @class = "control-label" })
            @Html.HiddenFor(m => m.Avatar, new { id = "hfavatar" })
        </div>
        <div class="controls">
            <div class="fileupload fileupload-new" data-provides="fileupload">
                <div class="fileupload-new thumbnail" style="max-width: 120px; max-height: 100px;">
                    <img src='@String.Format("{0}", !string.IsNullOrEmpty(Model.Avatar) ? Model.Avatar : ApplicationService.NoImage)' />
                </div>
                <div class="fileupload-preview fileupload-exists thumbnail" style="max-width: 120px; max-height: 100px; line-height: 20px;"></div>
                <div>
                    <span class="btn btn-file"><span class="fileupload-new">Tải ảnh</span><span class="fileupload-exists">Tải ảnh</span><input type="file" name='image' /></span>
                    <a href="#" class="btn fileupload-exists" data-dismiss="fileupload">Hủy</a>
                </div>
            </div>
        </div>
    </div>
    <div class="validation-group">
        <div class="controls">
            @Html.ValidationSummary(true)
        </div>
    </div>
    <div class="form-actions">
        <button class="btn btn-primary" type="submit">@Resources.Common.SaveChanges</button>
    </div>
</div>
    @Html.AntiForgeryToken()
}
<script type="text/javascript">
    $(document).ready(function () {
        if (screen.width > 1500) {
            top.winsetup("Sửa tài khoản người dùng", 1440 * 0.5, screen.height * 0.55, true);
        } else if (screen.width < 450) {
            top.winsetup("Sửa tài khoản người dùng", 335, 450, true);
        }
        else {
            top.winsetup("Sửa tài khoản người dùng", 600, 600, true);
        }
    });
    function create_success() {
        top.$("#window").data("kendoWindow").close();
        top.$("#grid").data("kendoGrid").dataSource.read();
        window.parent.show_stack_bottom_right('success', 'Sửa người dùng', 'Sửa thành công.');

    }
    function thumbprocess(obj,target, noimg) {
        var state = $(obj).attr("state");
        var cthumb = $(obj).next().attr('url');
        if (state == '' || state == null) {
            $(obj).next().val('');
            $('#' + target).find('img').attr('src', noimg);
            $(obj).text("Khôi phục"); $(obj).attr("state", "1")
        } else {
            $(obj).text("Xóa");
            $('#' + target).find('img').attr('src', cthumb);
            $(obj).next().val(cthumb); $(obj).attr("state", "")
        }
    }
</script>
